[{"path":"https://markean.github.io/melt/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, interest fostering open welcoming community, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality. Examples unacceptable behavior participants include: use sexualized language imagery Personal attacks Trolling insulting/derogatory comments Public private harassment Publishing ’s private information, physical electronic addresses, without explicit permission unethical unprofessional conduct Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful. adopting Code Conduct, project maintainers commit fairly consistently applying principles every aspect managing project. Project maintainers follow enforce Code Conduct may permanently removed project team. Code Conduct applies within project spaces public spaces individual representing project community. Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project maintainer. complaints reviewed investigated result response deemed necessary appropriate circumstances. Maintainers obligated maintain confidentiality regard reporter incident. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.3.0, available https://www.contributor-covenant.org/version/1/3/0/code--conduct.html","code":""},{"path":"https://markean.github.io/melt/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to melt","title":"Contributing to melt","text":"R package melt stable state development, degree subsequent development planned authors. welcome contributions package. Please submit questions, bug reports, requests issues. ’ve found bug, please file issue illustrates bug minimal reprex. want make bigger change, ’s good idea first file issue fork repository needed.","code":""},{"path":"https://markean.github.io/melt/CONTRIBUTING.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Contributing to melt","text":": options families link functions el_glm(). model diagnostic tools. multiple testing options. : parallelization schemes boot, RcppParallel models linear mixed models, generalized additive model, etc.","code":""},{"path":"https://markean.github.io/melt/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code style","title":"Contributing to melt","text":"generally follow tidyverse style guide. can use styler package apply styles. S4 class names use UpperCamelCase. S4 generics methods use lowerCamelCase. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://markean.github.io/melt/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to melt","text":"Please note melt project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://markean.github.io/melt/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://markean.github.io/melt/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://markean.github.io/melt/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://markean.github.io/melt/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://markean.github.io/melt/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://markean.github.io/melt/articles/melt.html","id":"fitting-an-el-object","dir":"Articles","previous_headings":"","what":"Fitting an EL object","title":"Introduction to melt","text":"melt package provides several functions construct EL object object inherits EL: el_mean() mean. el_var() variance. el_lm() linear models. el_glm() generalized linear models. illustrate usage el_mean() faithful data set. Suppose interested evaluating empirical likelihood \\((3.5, 70)\\). faithful data frame coerced numeric matrix. Simple print method shows essential information fit. Note maximum empirical likelihood estimates sample averages. chi-square value shown corresponds minus twice empirical log-likelihood ratio. asymptotic chi-square distribution 2 degrees freedom null hypothesis. Hence \\(p\\)-value exact. convergence status bottom can used check convex hull constraint.","code":"data(\"faithful\") str(faithful) #> 'data.frame':    272 obs. of  2 variables: #>  $ eruptions: num  3.6 1.8 3.33 2.28 4.53 ... #>  $ waiting  : num  79 54 74 62 85 55 88 85 51 85 ... summary(faithful) #>    eruptions        waiting     #>  Min.   :1.600   Min.   :43.0   #>  1st Qu.:2.163   1st Qu.:58.0   #>  Median :4.000   Median :76.0   #>  Mean   :3.488   Mean   :70.9   #>  3rd Qu.:4.454   3rd Qu.:82.0   #>  Max.   :5.100   Max.   :96.0 fit <- el_mean(faithful, par = c(3.5, 70)) class(fit) #> [1] \"EL\" #> attr(,\"package\") #> [1] \"melt\" showClass(\"EL\") #> Class \"EL\" [package \"melt\"] #>  #> Slots: #>                                                                         #> Name:         optim         logp         logl        loglr    statistic #> Class:         list      numeric      numeric      numeric      numeric #>                                                                         #> Name:            df         pval         npar      weights         data #> Class:      integer      numeric      integer      numeric       matrix #>                                  #> Name:  coefficients       method #> Class:      numeric    character #>  #> Known Subclasses:  #> Class \"CEL\", directly #> Class \"LM\", by class \"CEL\", distance 2 #> Class \"GLM\", by class \"LM\", distance 3 fit #>  #>  Empirical Likelihood: mean  #>  #> Maximum EL estimates: #> eruptions   waiting  #>     3.488    70.897  #>  #> Chisq: 8.483, df: 2, Pr(>Chisq): 0.01439 #>  #> EL evaluation: converged"},{"path":"https://markean.github.io/melt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eunseop Kim. Author, maintainer. Steven MacEachern. Author, thesis advisor. Mario Peruggia. Author, thesis advisor.","code":""},{"path":"https://markean.github.io/melt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim E, MacEachern S, Peruggia M (2022). melt: Multiple Empirical Likelihood Tests. https://github.com/markean/melt, https://markean.github.io/melt/.","code":"@Manual{,   title = {melt: Multiple Empirical Likelihood Tests},   author = {Eunseop Kim and Steven MacEachern and Mario Peruggia},   year = {2022},   note = {https://github.com/markean/melt, https://markean.github.io/melt/}, }"},{"path":[]},{"path":"https://markean.github.io/melt/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Multiple Empirical Likelihood Tests","text":"R package melt provides unified framework data analysis empirical likelihood methods. collection functions available regression analysis hypothesis testing. Much functionality syntax mimics corresponding base R functions. core computational routines implemented ‘Eigen’ C++ library ‘RcppEigen’ interface, OpenMP parallel computation. Additional functions available multiple testing analysis experimental designs. Details testing procedures given Kim, MacEachern, Peruggia (2021).","code":""},{"path":"https://markean.github.io/melt/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Multiple Empirical Likelihood Tests","text":"can install latest stable release CRAN. can install latest development version Github.","code":"install.packages(\"melt\") # install.packages(\"devtools\") devtools::install_github(\"markean/melt\")"},{"path":"https://markean.github.io/melt/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Multiple Empirical Likelihood Tests","text":"","code":"library(melt) # one sample test for mean fit1 <- el_mean(rnorm(n = 100), par = 0) confint(fit1) #>        lower     upper #> 1 -0.2748642 0.0867665   # linear regression fit2 <- el_lm(mpg ~ wt, data = mtcars) summary(fit2) #>  #> Call: #> el_lm(formula = mpg ~ wt, data = mtcars) #>  #> Coefficients: #>             Estimate Chisq Pr(>Chisq)     #> (Intercept)   37.285 443.3     <2e-16 *** #> wt            -5.344 439.1     <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Chisq: 439.1, df: 1, Pr(>Chisq): < 2.2e-16  #>  #> Constrained EL: not converged confint(fit2) #>                 lower     upper #> (Intercept) 33.175865 41.865426 #> wt          -6.746902 -4.149511   # analysis of variance  data(\"clothianidin\") fit3 <- el_lm(clo ~ -1 + trt, data = clothianidin) summary(fit3) #>  #> Call: #> el_lm(formula = clo ~ -1 + trt, data = clothianidin) #>  #> Coefficients: #>              Estimate   Chisq Pr(>Chisq)     #> trtNaked       -4.479 411.072    < 2e-16 *** #> trtFungicide   -3.427  59.486   1.23e-14 *** #> trtLow         -2.800  62.955   2.11e-15 *** #> trtHigh        -1.307   4.653      0.031 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Chisq: 894.4, df: 4, Pr(>Chisq): < 2.2e-16  #>  #> Constrained EL: not converged confint(fit3) #>                  lower      upper #> trtNaked     -5.002118 -3.9198229 #> trtFungicide -4.109816 -2.6069870 #> trtLow       -3.681837 -1.9031795 #> trtHigh      -2.499165 -0.1157222   # test of no treatment effect lhs <- matrix(c(1, -1, 0, 0,                 0, 1, -1, 0,                 0, 0, 1, -1), byrow = TRUE, nrow = 3) elt(fit3, lhs = lhs) #>  #> Empirical Likelihood Test #>  #> Significance level: 0.05, Calibration: Chi-square  #>  #> Statistic: 26.59804, Critical value: 7.814728  #>  #> p-value: 7.147731e-06   # logistic regression fit4 <- el_glm(vs ~ mpg, data = mtcars, family = binomial) summary(fit4) #>  #> Call: #> el_glm(formula = vs ~ mpg, family = binomial, data = mtcars) #>  #> Coefficients: #>             Estimate Chisq Pr(>Chisq)     #> (Intercept)  -8.8331 24.79   6.39e-07 *** #> mpg           0.4304 24.42   7.75e-07 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Chisq: 24.42, df: 1, Pr(>Chisq): 7.751e-07  #>  #> Constrained EL: converged"},{"path":"https://markean.github.io/melt/reference/CEL-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CEL class — CEL-class","title":"CEL class — CEL-class","text":"S4 class constrained empirical likelihood. inherits EL class. Note optim slot constrained optimization results respect parameters, Lagrange multiplier.","code":""},{"path":"https://markean.github.io/melt/reference/CEL-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CEL class — CEL-class","text":"Let \\(l(\\theta)\\) denote minus twice empirical log-likelihood ratio function. consider linear hypothesis form $$L\\theta = r,$$ left-hand-side \\(L\\) \\(q\\) \\(p\\) matrix right-hand-side \\(r\\) \\(q\\)-dimensional vector. regularity conditions, \\(l(\\theta)\\) converges distribution \\(\\chi^2_q\\) constraint hypothesis, .e., $$\\min_{\\theta: L\\theta = r} l(\\theta) \\to_d \\chi^2_q .$$ Minimization \\(l(\\theta)\\) respect \\(\\theta\\) computationally expensive since implicitly involves evaluation step described EL. , depending form \\(g(X_i, \\theta)\\) constraint, optimization problem can nonconvex multiple local minima. reason, package melt considers linear hypotheses performs local minimization \\(l(\\theta)\\) using projected gradient descent method. orthogonal projection matrix \\(P\\) step size \\(\\gamma\\), algorithm updates \\(\\theta\\) $$\\theta^{(k + 1)} \\leftarrow \\theta^{(k)} -   \\gamma P \\nabla l(\\theta^{(k)}),$$ \\(\\nabla l(\\theta^{(k)})\\) denotes gradient \\(l\\) \\(\\theta^{(k)}\\). first order optimality condition \\(P \\nabla l(\\theta) = 0\\), used stopping criterion.","code":""},{"path":"https://markean.github.io/melt/reference/CEL-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"CEL class — CEL-class","text":"optim list following optimization results: par  numeric vector parameter value minimizes empirical likelihood subject constraints. lambda  numeric vector Lagrange multipliers. iterations  single integer number iterations performed. convergence  single logical convergence status.","code":""},{"path":"https://markean.github.io/melt/reference/CEL-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CEL class — CEL-class","text":"Adimari, Gianfranco, Annamaria Guolo. 2010. “Note Asymptotic Behaviour Empirical Likelihood Statistics.” Statistical Methods & Applications 19 (4): 463–76. doi:10.1007/s10260-010-0137-9 . Qin, Jing, Jerry Lawless. 1995. “Estimating Equations, Empirical Likelihood Constraints Parameters.” Canadian Journal Statistics 23 (2): 145–59. doi:10.2307/3315441 .","code":""},{"path":"https://markean.github.io/melt/reference/CEL-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CEL class — CEL-class","text":"","code":"showClass(\"CEL\") #> Class \"CEL\" [package \"melt\"] #>  #> Slots: #>                                                                         #> Name:         optim         logp         logl        loglr    statistic #> Class:         list      numeric      numeric      numeric      numeric #>                                                                         #> Name:            df         pval         npar      weights         data #> Class:      integer      numeric      integer      numeric       matrix #>                                  #> Name:  coefficients       method #> Class:      numeric    character #>  #> Extends: \"EL\" #>  #> Known Subclasses:  #> Class \"LM\", directly #> Class \"GLM\", by class \"LM\", distance 2"},{"path":"https://markean.github.io/melt/reference/ConfregEL-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ConfregEL class — ConfregEL-class","title":"ConfregEL class — ConfregEL-class","text":"S4 class confidence region.","code":""},{"path":"https://markean.github.io/melt/reference/ConfregEL-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ConfregEL class — ConfregEL-class","text":"points numeric matrix two columns boundary points confidence region. estimates numeric vector length two parameter estimates. level single numeric confidence level required. cv single numeric critical value calibration empirical likelihood ratio statistic. pnames character vector length two name parameters.","code":""},{"path":"https://markean.github.io/melt/reference/ConfregEL-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ConfregEL class — ConfregEL-class","text":"","code":"showClass(\"ConfregEL\") #> Class \"ConfregEL\" [package \"melt\"] #>  #> Slots: #>                                                          #> Name:     points estimates     level        cv    pnames #> Class:    matrix   numeric   numeric   numeric character"},{"path":"https://markean.github.io/melt/reference/ControlEL-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ControlEL class — ControlEL-class","title":"ControlEL class — ControlEL-class","text":"S4 class computational details empirical likelihood.","code":""},{"path":"https://markean.github.io/melt/reference/ControlEL-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ControlEL class — ControlEL-class","text":"maxit single integer maximum number iterations optimization respect \\(\\theta\\). maxit_l single integer maximum number iterations optimization respect \\(\\lambda\\). tol single numeric convergence tolerance denoted \\(\\epsilon\\). iteration stops $$\\|P \\nabla l(\\theta^{(k)})\\| < \\epsilon.$$ tol_l single numeric relative convergence tolerance denoted \\(\\delta\\). iteration stops $$\\|\\lambda^{(k)} - \\lambda^{(k - 1)}\\| <   \\delta\\|\\lambda^{(k - 1)}\\| + \\delta^2.$$ step single numeric step size \\(\\gamma\\) projected gradient descent method. th single numeric threshold negative empirical log-likelihood ratio. nthreads single integer number threads parallel computation via OpenMP (available). seed single integer seed random number generation. b single integer number bootstrap replicates. m single integer number Monte Carlo samples.","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/ControlEL-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ControlEL class — ControlEL-class","text":"","code":"showClass(\"ControlEL\") #> Class \"ControlEL\" [package \"melt\"] #>  #> Slots: #>                                                                                #> Name:     maxit  maxit_l      tol    tol_l     step       th nthreads     seed #> Class:  integer  integer  numeric  numeric      ANY      ANY  integer  integer #>                          #> Name:         b        m #> Class:  integer  integer"},{"path":"https://markean.github.io/melt/reference/EL-class.html","id":null,"dir":"Reference","previous_headings":"","what":"EL class — EL-class","title":"EL class — EL-class","text":"S4 class empirical likelihood.","code":""},{"path":"https://markean.github.io/melt/reference/EL-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EL class — EL-class","text":"","code":"# S4 method for EL print(x, digits = max(3L, getOption(\"digits\") - 3L), ...)"},{"path":"https://markean.github.io/melt/reference/EL-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EL class — EL-class","text":"x object class EL. digits single integer number significant digits passed format(). ... arguments passed methods.","code":""},{"path":"https://markean.github.io/melt/reference/EL-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EL class — EL-class","text":"Let \\(X_i\\) independent identically distributed \\(p\\)-dimensional random variable unknown distribution \\(F\\) \\(= 1, \\dots, n\\). parameter interest \\(\\theta(F) \\  {\\rm{\\!R}}^p\\), consider \\(p\\)-dimensional smooth estimating function \\(g(X_i, \\theta)\\) moment condition $$\\textnormal{E}[g(X_i, \\theta)] = 0.$$ assume exists unique \\(\\theta_0\\) solves equation. Given value \\(\\theta\\), (profile) empirical likelihood ratio defined $$\\mathcal{R}(\\theta) =   \\max_{p_i}\\left\\{\\prod_{= 1}^n np_i :   \\sum_{= 1}^n p_i g(X_i, \\theta) = 0, p_i \\geq 0, \\sum_{= 1}^n p_i = 1   \\right\\}.$$ Lagrange multiplier \\(\\lambda \\equiv \\lambda(\\theta)\\) dual problem leads $$p_i = \\frac{1}{n}\\frac{1}{1 + \\lambda^\\top g(X_i, \\theta)},$$ \\(\\lambda\\) solves $$\\frac{1}{n}\\sum_{= 1}^n \\frac{g(X_i, \\theta)}   {1 + \\lambda^\\top g(X_i, \\theta)} = 0.$$ empirical log-likelihood ratio given $$\\log\\mathcal{R}(\\theta) = -\\sum_{= 1}^n   \\log(1 + \\lambda^\\top g(X_i, \\theta)).$$ problem can efficiently solved Newton-Raphson method zero vector contained interior convex hull \\(\\{g(X_i, \\theta)\\}_{= 1}^n\\). regularity conditions, known \\(-2\\log\\mathcal{R}(\\theta_0)\\) converges distribution \\(\\chi^2_p\\), \\(\\chi^2_p\\) chi-square distribution \\(p\\) degrees freedom.","code":""},{"path":"https://markean.github.io/melt/reference/EL-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"EL class — EL-class","text":"optim list following optimization results: par  numeric vector specified parameters. lambda  numeric vector Lagrange multipliers. iterations  single integer number iterations performed. convergence  single logical convergence status. logp numeric vector log probabilities obtained empirical likelihood. logl single numeric empirical log-likelihood. loglr single numeric empirical log-likelihood ratio. statistic single numeric minus twice empirical log-likelihood ratio statistic asymptotic chi-square distribution. df single integer degrees freedom statistic. pval single numeric \\(p\\)-value statistic. npar single integer number parameters. weights numeric vector rescaled weights used model fitting. data numeric matrix data used model fitting. coefficients numeric vector maximum empirical likelihood estimates parameters. method single character method dispatch internal functions.","code":""},{"path":"https://markean.github.io/melt/reference/EL-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"EL class — EL-class","text":"Glenn, N.L., Yichuan Zhao. 2007. “Weighted Empirical Likelihood Estimates Robustness Properties.” Computational Statistics & Data Analysis 51 (10): 5130–41. doi:10.1016/j.csda.2006.07.032 . Qin, Jin, Jerry Lawless. 1994. “Empirical Likelihood General Estimating Equations.” Annals Statistics 22 (1): 300–325. doi:10.1214/aos/1176325370 .","code":""},{"path":"https://markean.github.io/melt/reference/EL-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EL class — EL-class","text":"","code":"showClass(\"EL\") #> Class \"EL\" [package \"melt\"] #>  #> Slots: #>                                                                         #> Name:         optim         logp         logl        loglr    statistic #> Class:         list      numeric      numeric      numeric      numeric #>                                                                         #> Name:            df         pval         npar      weights         data #> Class:      integer      numeric      integer      numeric       matrix #>                                  #> Name:  coefficients       method #> Class:      numeric    character #>  #> Known Subclasses:  #> Class \"CEL\", directly #> Class \"LM\", by class \"CEL\", distance 2 #> Class \"GLM\", by class \"LM\", distance 3"},{"path":"https://markean.github.io/melt/reference/ELD-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ELD class — ELD-class","title":"ELD class — ELD-class","text":"S4 class empirical likelihood displacement.","code":""},{"path":"https://markean.github.io/melt/reference/ELD-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ELD class — ELD-class","text":"eld numeric vector empirical likelihood displacement values.","code":""},{"path":"https://markean.github.io/melt/reference/ELD-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ELD class — ELD-class","text":"","code":"showClass(\"ELD\") #> Class \"ELD\" [package \"melt\"] #>  #> Slots: #>                #> Name:      eld #> Class: numeric"},{"path":"https://markean.github.io/melt/reference/ELMT-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ELMT class — ELMT-class","title":"ELMT class — ELMT-class","text":"S4 class empirical likelihood multiple tests.","code":""},{"path":"https://markean.github.io/melt/reference/ELMT-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ELMT class — ELMT-class","text":"","code":"# S4 method for ELMT print(   x,   digits = getOption(\"digits\"),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"https://markean.github.io/melt/reference/ELMT-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ELMT class — ELMT-class","text":"x object class ELMT. digits single integer number significant digits passed format(). signif.stars single logical. TRUE, ‘significance stars’ printed coefficient. ... arguments passed methods.","code":""},{"path":"https://markean.github.io/melt/reference/ELMT-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ELMT class — ELMT-class","text":"alpha single numeric overall significance level. statistic numeric vector minus twice (constrained) empirical log-likelihood ratios. cv single numeric multiplicity adjusted critical value. pval numeric vector multiplicity adjusted \\(p\\)-values. calibrate single character calibration method used.","code":""},{"path":"https://markean.github.io/melt/reference/ELMT-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ELMT class — ELMT-class","text":"","code":"showClass(\"ELMT\") #> Class \"ELMT\" [package \"melt\"] #>  #> Slots: #>                                                          #> Name:      alpha statistic        cv      pval calibrate #> Class:   numeric   numeric   numeric   numeric character"},{"path":"https://markean.github.io/melt/reference/ELT-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ELT class — ELT-class","title":"ELT class — ELT-class","text":"S4 class empirical likelihood test.","code":""},{"path":"https://markean.github.io/melt/reference/ELT-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ELT class — ELT-class","text":"","code":"# S4 method for ELT print(x, digits = getOption(\"digits\"), ...)"},{"path":"https://markean.github.io/melt/reference/ELT-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ELT class — ELT-class","text":"x object class ELT. digits single integer number significant digits passed format(). ... arguments passed methods.","code":""},{"path":"https://markean.github.io/melt/reference/ELT-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ELT class — ELT-class","text":"optim list optimization results. alpha single numeric significance level. logl single numeric (constrained) empirical log-likelihood. statistic single numeric minus twice (constrained) empirical log-likelihood ratio. cv single numeric critical value. pval single numeric \\(p\\)-value statistic. calibrate single character calibration method used.","code":""},{"path":"https://markean.github.io/melt/reference/ELT-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ELT class — ELT-class","text":"","code":"showClass(\"ELT\") #> Class \"ELT\" [package \"melt\"] #>  #> Slots: #>                                                                              #> Name:      optim     alpha      logl statistic        cv      pval calibrate #> Class:      list   numeric   numeric   numeric   numeric   numeric character"},{"path":"https://markean.github.io/melt/reference/GLM-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GLM class — GLM-class","title":"GLM class — GLM-class","text":"S4 class generalized linear models empirical likelihood. inherits LM class.","code":""},{"path":"https://markean.github.io/melt/reference/GLM-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLM class — GLM-class","text":"","code":"showClass(\"GLM\") #> Class \"GLM\" [package \"melt\"] #>  #> Slots: #>                                                                         #> Name:      parTests         misc        optim         logp         logl #> Class:         list         list         list      numeric      numeric #>                                                                         #> Name:         loglr    statistic           df         pval         npar #> Class:      numeric      numeric      integer      numeric      integer #>                                                            #> Name:       weights         data coefficients       method #> Class:      numeric       matrix      numeric    character #>  #> Extends:  #> Class \"LM\", directly #> Class \"CEL\", by class \"LM\", distance 2 #> Class \"EL\", by class \"LM\", distance 3"},{"path":"https://markean.github.io/melt/reference/LM-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LM class — LM-class","title":"LM class — LM-class","text":"S4 class linear models empirical likelihood. inherits CEL class.","code":""},{"path":"https://markean.github.io/melt/reference/LM-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LM class — LM-class","text":"intercept model, optim slot need understood terms EL class since constrained optimization involved overall test.","code":""},{"path":"https://markean.github.io/melt/reference/LM-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"LM class — LM-class","text":"parTests list test results parameter: statistic  numeric vector empirical likelihood ratio statistics. convergence  logical vector convergence status tests parameter. misc list miscellaneous outputs model fitting function. used generics methods.","code":""},{"path":"https://markean.github.io/melt/reference/LM-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LM class — LM-class","text":"","code":"showClass(\"LM\") #> Class \"LM\" [package \"melt\"] #>  #> Slots: #>                                                                         #> Name:      parTests         misc        optim         logp         logl #> Class:         list         list         list      numeric      numeric #>                                                                         #> Name:         loglr    statistic           df         pval         npar #> Class:      numeric      numeric      integer      numeric      integer #>                                                            #> Name:       weights         data coefficients       method #> Class:      numeric       matrix      numeric    character #>  #> Extends:  #> Class \"CEL\", directly #> Class \"EL\", by class \"CEL\", distance 2 #>  #> Known Subclasses: \"GLM\""},{"path":"https://markean.github.io/melt/reference/SummaryLM-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SummaryLM class — SummaryLM-class","title":"SummaryLM class — SummaryLM-class","text":"S4 class summary LM objects.","code":""},{"path":"https://markean.github.io/melt/reference/SummaryLM-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SummaryLM class — SummaryLM-class","text":"","code":"# S4 method for SummaryLM print(   x,   digits = max(3L, getOption(\"digits\") - 3L),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"https://markean.github.io/melt/reference/SummaryLM-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SummaryLM class — SummaryLM-class","text":"x object class SummaryLM. digits single integer number significant digits passed format(). signif.stars single logical. TRUE, ‘significance stars’ printed coefficient. ... arguments passed methods.","code":""},{"path":"https://markean.github.io/melt/reference/SummaryLM-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"SummaryLM class — SummaryLM-class","text":"statistic single numeric minus twice empirical log-likelihood ratio overall test model. df single integer degrees freedom statistic. convergence single logical convergence status constrained minimization. parMatrix numeric matrix test results parameters. weighted single logical whether given model weighted . na.action Information returned model.frame special handling NAs. call Matched call. terms terms object used. aliased named logical vector showing original coefficients aliased.","code":""},{"path":"https://markean.github.io/melt/reference/SummaryLM-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SummaryLM class — SummaryLM-class","text":"","code":"showClass(\"SummaryLM\") #> Class \"SummaryLM\" [package \"melt\"] #>  #> Slots: #>                                                                                #> Name:    statistic          df convergence   parMatrix    weighted   na.action #> Class:     numeric     integer     logical      matrix     logical         ANY #>                                            #> Name:         call       terms     aliased #> Class:         ANY         ANY     logical"},{"path":"https://markean.github.io/melt/reference/clothianidin.html","id":null,"dir":"Reference","previous_headings":"","what":"Clothianidin concentration in maize plants — clothianidin","title":"Clothianidin concentration in maize plants — clothianidin","text":"dataset summarizing field experiments result seed treatments clothianidin concentration.","code":""},{"path":"https://markean.github.io/melt/reference/clothianidin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clothianidin concentration in maize plants — clothianidin","text":"","code":"data(\"clothianidin\")"},{"path":"https://markean.github.io/melt/reference/clothianidin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Clothianidin concentration in maize plants — clothianidin","text":"data frame 102 rows 3 variables: blk New blocks constructed original data. format 'days post planting_original block_year'. trt Seed treatment. clo Log transformed clothianidin concentration (µg).","code":""},{"path":"https://markean.github.io/melt/reference/clothianidin.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clothianidin concentration in maize plants — clothianidin","text":"Alford, Adam, Christian H. Krupke. 2017. “Translocation Neonicotinoid Seed Treatment Clothianidin Maize.” Edited Michael J. Stout. PLOS ONE 12 (3): e0173836. doi:10.1371/journal.pone.0173836 .","code":""},{"path":"https://markean.github.io/melt/reference/clothianidin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clothianidin concentration in maize plants — clothianidin","text":"original data provided Alford Krupke (2017). shoot region observations taken original data processed illustration.","code":""},{"path":"https://markean.github.io/melt/reference/coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Model coefficients — coef","title":"Model coefficients — coef","text":"Extracts maximum empirical likelihood estimates model.","code":""},{"path":"https://markean.github.io/melt/reference/coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model coefficients — coef","text":"","code":"# S4 method for EL coef(object, ...)"},{"path":"https://markean.github.io/melt/reference/coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model coefficients — coef","text":"object object inherit class EL, including CEL, LM, GLM. ... used.","code":""},{"path":"https://markean.github.io/melt/reference/coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model coefficients — coef","text":"numeric vector maximum empirical likelihood estimates.","code":""},{"path":"https://markean.github.io/melt/reference/coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model coefficients — coef","text":"","code":"fit <- el_lm(mpg ~ wt, data = mtcars) coef(fit) #> (Intercept)          wt  #>   37.285126   -5.344472"},{"path":"https://markean.github.io/melt/reference/confint.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence interval for model parameters — confint","title":"Confidence interval for model parameters — confint","text":"Computes confidence intervals one parameters fitted model. package melt adds method objects inheriting class EL.","code":""},{"path":"https://markean.github.io/melt/reference/confint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence interval for model parameters — confint","text":"","code":"# S4 method for EL confint(object, parm, level = 0.95, ..., cv = NULL, control = el_control())"},{"path":"https://markean.github.io/melt/reference/confint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence interval for model parameters — confint","text":"object object inherit class EL, including CEL, LM, GLM. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level single numeric confidence level required. Defaults 0.95. ... used. cv single numeric critical value calibration empirical likelihood ratio statistic. Defaults NULL set qchisq(level, 1L). non-NULL, level ignored. control object class ControlEL constructed el_control().","code":""},{"path":"https://markean.github.io/melt/reference/confint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence interval for model parameters — confint","text":"matrix columns giving lower upper confidence limits parameter. contrast methods rely studentization, lower upper limits obtained empirical likelihood correspond (1 - level) / 2 1 - (1 - level) / 2 %, respectively.","code":""},{"path":"https://markean.github.io/melt/reference/confint.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence interval for model parameters — confint","text":"Owen, Art. 1990. “Empirical Likelihood Ratio Confidence Regions.” Annals Statistics 18 (1): 90–120. doi:10.1214/aos/1176347494 .","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/confint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence interval for model parameters — confint","text":"","code":"fit <- el_lm(mpg ~ ., data = mtcars) confint(fit, parm = c(2, 3)) #>             lower     upper #> cyl  -0.426725127 0.3802687 #> disp  0.006409155 0.0218920"},{"path":"https://markean.github.io/melt/reference/confreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence region for model parameters — confreg","title":"Confidence region for model parameters — confreg","text":"Computes boundary points two-dimensional confidence region model parameters.","code":""},{"path":"https://markean.github.io/melt/reference/confreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence region for model parameters — confreg","text":"","code":"# S4 method for EL confreg(   object,   parm,   level = 0.95,   cv = NULL,   npoints = 50L,   control = el_control() )"},{"path":"https://markean.github.io/melt/reference/confreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence region for model parameters — confreg","text":"object object inherit class EL, including CEL, LM, GLM. parm specification parameters given confidence region, either vector numbers vector names. vector length two form c(x, y). missing, first two parameter object considered. level single numeric confidence level required. Defaults 0.95. ignored cv non-NULL. cv single numeric critical value calibration empirical likelihood ratio statistic. Defaults NULL set qchisq(level, 2L). must compatible th value control. npoints single integer number boundary points compute. Defaults 50. control object class ControlEL constructed el_control().","code":""},{"path":"https://markean.github.io/melt/reference/confreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence region for model parameters — confreg","text":"object class ConfregEL.","code":""},{"path":"https://markean.github.io/melt/reference/confreg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence region for model parameters — confreg","text":"Owen, Art. 1990. “Empirical Likelihood Ratio Confidence Regions.” Annals Statistics 18 (1): 90–120. doi:10.1214/aos/1176347494 .","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/confreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence region for model parameters — confreg","text":"","code":"fit <- el_lm(mpg ~ ., data = mtcars) cr <- confreg(fit, parm = c(2, 3), level = 0.95, cv = qchisq(0.95, 2)) plot(cr)"},{"path":"https://markean.github.io/melt/reference/el_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control parameters for computation — el_control","title":"Control parameters for computation — el_control","text":"Specifies computational details (constrained) empirical likelihood.","code":""},{"path":"https://markean.github.io/melt/reference/el_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control parameters for computation — el_control","text":"","code":"el_control(   maxit = 200L,   maxit_l = 25L,   tol = 1e-06,   tol_l = 1e-06,   step = NULL,   th = NULL,   nthreads,   seed = sample.int(.Machine$integer.max, 1L),   b = 10000L,   m = 1000000L )"},{"path":"https://markean.github.io/melt/reference/el_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control parameters for computation — el_control","text":"maxit single integer maximum number iterations constrained minimization empirical likelihood. Defaults 200. maxit_l single integer maximum number iterations evaluation empirical likelihood. Defaults 25. tol single numeric convergence tolerance constrained minimization. Defaults 1e-06. tol_l single numeric relative convergence tolerance evaluation. Defaults 1e-06. step single numeric step size projected gradient descent method. Defaults NULL set reciprocal sample size. th single numeric threshold negative empirical log-likelihood ratio. iteration stops value exceeds threshold. Defaults NULL sets threshold 200 * d, d corresponds degrees freedom limiting chi-squared distribution statistic. nthreads single integer number threads parallel computation via OpenMP (available). Defaults half available threads. better performance, generally recommended limit number threads number physical cores. Note applies following functions involve multiple evaluations minimizations: confint(), confreg(), el_lm(), el_glm(), eld(), elt(). seed single integer seed random number generation. applies elt() calibrate set \"boot\". Defaults random integer generated 1 maximum integer supported R machine, determined set.seed(). one seed needed even multiple threads used nthreads. thread given separate seed produce non-overlapping reproducible sequence random numbers. Xoshiro256+ pseudo-random number generator used internally work OpenMP. b single integer number bootstrap replicates. applies elt() calibrate set \"boot\". Defaults 10000. m single integer number Monte Carlo samples. applies elmt(). Defaults 1e+06.","code":""},{"path":"https://markean.github.io/melt/reference/el_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control parameters for computation — el_control","text":"object class ControlEL.","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/el_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control parameters for computation — el_control","text":"","code":"optcfg <- el_control(maxit = 300, step = 0.01, th = 200, nthreads = 1)"},{"path":"https://markean.github.io/melt/reference/el_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical likelihood for general estimating functions — el_eval","title":"Empirical likelihood for general estimating functions — el_eval","text":"Computes empirical likelihood general estimating functions.","code":""},{"path":"https://markean.github.io/melt/reference/el_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical likelihood for general estimating functions — el_eval","text":"","code":"el_eval(g, weights = NULL, control = el_control())"},{"path":"https://markean.github.io/melt/reference/el_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical likelihood for general estimating functions — el_eval","text":"g numeric matrix, object can coerced numeric matrix. row corresponds observation estimating function. number rows must greater number columns. weights optional numeric vector weights used fitting process. length vector must number rows g. Defaults NULL, corresponding identical weights. non-NULL, weighted empirical likelihood computed. control object class ControlEL constructed el_control().","code":""},{"path":"https://markean.github.io/melt/reference/el_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical likelihood for general estimating functions — el_eval","text":"list following components: optim list following optimization results: lambda  Lagrange multiplier dual problem. iterations  Number iterations performed. convergence  Convergence status. logp Log probabilities obtained empirical likelihood. logl Empirical log-likelihood. loglr Empirical log-likelihood ratio. statistic Minus twice empirical log-likelihood ratio statistic asymptotic chi-square distribution. df Degrees freedom statistic. pval \\(p\\)-value statistic. npar Number parameters. weights Rescaled weights used model fitting.","code":""},{"path":"https://markean.github.io/melt/reference/el_eval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical likelihood for general estimating functions — el_eval","text":"el_eval evaluates empirical likelihood \\(n\\) \\(p\\) numeric matrix argument g, whose \\(\\)th row \\(g(X_i, \\theta)\\). Since estimating function can arbitrary, el_eval return object class EL, associated generics methods applicable.","code":""},{"path":"https://markean.github.io/melt/reference/el_eval.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical likelihood for general estimating functions — el_eval","text":"Qin, Jin, Jerry Lawless. 1994. “Empirical Likelihood General Estimating Equations.” Annals Statistics 22 (1): 300–325. doi:10.1214/aos/1176325370 .","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/el_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical likelihood for general estimating functions — el_eval","text":"","code":"x <- rnorm(50) par <- 0 g <- x - par el_eval(g, weights = rep(c(1, 2), each = 25)) #> $optim #> $optim$lambda #> [1] -0.2013955 #>  #> $optim$iterations #> [1] 4 #>  #> $optim$convergence #> [1] TRUE #>  #>  #> $logp #>  [1] -4.115839 -4.330586 -4.359007 -4.416980 -4.145060 -4.277858 -4.013317 #>  [8] -4.295149 -4.166247 -4.079385 -4.159214 -4.067014 -3.991523 -4.556887 #> [15] -4.724079 -4.517340 -4.274112 -4.163748 -4.388806 -4.620940 -3.789329 #> [22] -4.322521 -4.500557 -4.568115 -4.513835 -3.733119 -3.658308 -3.502012 #> [29] -3.678178 -3.748880 -3.699458 -3.627010 -3.960312 -3.514640 -3.840725 #> [36] -3.727803 -3.743630 -3.529354 -3.873505 -3.628387 -3.639636 -3.905302 #> [43] -3.794731 -3.528011 -3.457157 -3.567608 -3.774474 -3.412259 -3.756824 #> [50] -3.261260 #>  #> $logl #> [1] -193.6551 #>  #> $loglr #> [1] -0.8855729 #>  #> $statistic #> [1] 1.771146 #>  #> $df #> [1] 1 #>  #> $p.value #> [1] 0.1832403 #>  #> $npar #> [1] 1 #>  #> $weights #>  [1] 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 #>  [8] 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 #> [15] 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 0.6666667 #> [22] 0.6666667 0.6666667 0.6666667 0.6666667 1.3333333 1.3333333 1.3333333 #> [29] 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 #> [36] 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 #> [43] 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 1.3333333 #> [50] 1.3333333 #>"},{"path":"https://markean.github.io/melt/reference/el_glm.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical likelihood for generalized linear models — el_glm","title":"Empirical likelihood for generalized linear models — el_glm","text":"Fits generalized linear model empirical likelihood.","code":""},{"path":"https://markean.github.io/melt/reference/el_glm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical likelihood for generalized linear models — el_glm","text":"","code":"el_glm(   formula,   family = gaussian,   data,   weights = NULL,   na.action,   control = el_control(),   model = TRUE,   start = NULL,   etastart = NULL,   mustart = NULL,   ... )"},{"path":"https://markean.github.io/melt/reference/el_glm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical likelihood for generalized linear models — el_glm","text":"formula object class formula (one can coerced class): symbolic description model fitted. family description error distribution link function used model. result call family function supported. See ‘Details’. data optional data frame, list environment (object coercible .data.frame() data frame) containing variables formula. found data, variables taken environment(formula). weights optional numeric vector weights used fitting process. Defaults NULL, corresponding identical weights. non-NULL, weighted empirical likelihood computed. na.action function indicates happen data contain NAs. default set na.action setting options, na.fail unset. control object class ControlEL constructed el_control(). model single logical. TRUE data matrix used fitting returned. start Starting values parameters linear predictor. Defaults NULL passed glm.fit(). etastart Starting values linear predictor. Defaults NULL passed glm.fit(). mustart Starting values vector means. Defaults NULL passed glm.fit(). ... Additional arguments passed glm.control().","code":""},{"path":"https://markean.github.io/melt/reference/el_glm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical likelihood for generalized linear models — el_glm","text":"object class GLM.","code":""},{"path":"https://markean.github.io/melt/reference/el_glm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical likelihood for generalized linear models — el_glm","text":"available families link functions follows: gaussian: identity, log, inverse. bimomial: logit, probit, log. poisson: log, identity, sqrt. Included tests overall test $$H_0: \\beta_1 = \\beta_2 = \\cdots = \\beta_{p-1} = 0,$$ tests parameter $$H_{0j}: \\beta_j = 0,\\ j = 0, \\dots, p-1.$$ test results returned optim parTests, respectively.","code":""},{"path":"https://markean.github.io/melt/reference/el_glm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical likelihood for generalized linear models — el_glm","text":"Chen, Song Xi, Hengjian Cui. 2003. “Extended Empirical Likelihood Generalized Linear Models.” Statistica Sinica 13: 69–81.","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/el_glm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical likelihood for generalized linear models — el_glm","text":"","code":"n <- 50 x <- rnorm(n) x2 <- rnorm(n) l <- -2 + 0.2 * x + 3 * x2 mu <- 1 / (1 + exp(-l)) y <- rbinom(n, 1, mu) df <- data.frame(y, x, x2) fit <- el_glm(y ~ x + x2,   family = binomial, df, weights = NULL,   na.action = na.omit, start = NULL, etastart = NULL, mustart = NULL ) summary(fit) #>  #> Call: #> el_glm(formula = y ~ x + x2, family = binomial, data = df, weights = NULL,  #>     na.action = na.omit, start = NULL, etastart = NULL, mustart = NULL) #>  #> Coefficients: #>             Estimate  Chisq Pr(>Chisq)     #> (Intercept)  -2.1320 16.793   4.17e-05 *** #> x            -0.6456  2.799     0.0943 .   #> x2            3.1609 45.925   1.23e-11 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Chisq: 48.49, df: 2, Pr(>Chisq): 2.952e-11  #>  #> Constrained EL: converged  #>"},{"path":"https://markean.github.io/melt/reference/el_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical likelihood for linear models — el_lm","title":"Empirical likelihood for linear models — el_lm","text":"Fits linear model empirical likelihood.","code":""},{"path":"https://markean.github.io/melt/reference/el_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical likelihood for linear models — el_lm","text":"","code":"el_lm(   formula,   data,   weights = NULL,   na.action,   control = el_control(),   model = TRUE,   ... )"},{"path":"https://markean.github.io/melt/reference/el_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical likelihood for linear models — el_lm","text":"formula object class formula (one can coerced class): symbolic description model fitted. data optional data frame, list environment (object coercible .data.frame() data frame) containing variables formula. found data, variables taken environment(formula). weights optional numeric vector weights used fitting process. Defaults NULL, corresponding identical weights. non-NULL, weighted empirical likelihood computed. na.action function indicates happen data contain NAs. default set na.action setting options, na.fail unset. control object class ControlEL constructed el_control(). model single logical. TRUE data matrix used fitting returned. ... Additional arguments passed low level regression fitting functions. See ‘Details’.","code":""},{"path":"https://markean.github.io/melt/reference/el_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical likelihood for linear models — el_lm","text":"object class LM.","code":""},{"path":"https://markean.github.io/melt/reference/el_lm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical likelihood for linear models — el_lm","text":"Suppose observe \\(n\\) independent random variables \\((X_i, Y_i)\\) common distribution, \\(X_i\\) \\(p\\)-dimensional covariate (including intercept ) \\(Y_i\\) response. consider following linear regression model: $$Y_i = X_i^\\top \\theta + \\epsilon_i,$$ \\(\\theta = (\\theta_0, \\dots, \\theta_{p-1})\\) unknown \\(p\\)-dimensional parameter errors \\(\\epsilon_i\\) independent random variables satisfy \\(\\textnormal{E}(\\epsilon_i | X_i)\\) = 0. assume errors finite conditional variance. least square estimator \\(\\theta\\) solves following estimating equation: $$\\sum_{= 1}^n(Y_i - X_i^\\top \\theta)X_i = 0.$$ el_lm() first computes parameter estimates calling lm.fit() (... ) since maximum empirical likelihood estimator least square estimator model. Next, performs hypothesis tests based asymptotic chi-squared distribution empirical likelihood ratio statistics. Included tests overall test $$H_0: \\theta_1 = \\theta_2 = \\cdots = \\theta_{p-1} = 0,$$ tests parameter $$H_{0j}: \\theta_j = 0,\\ j = 0, \\dots, p-1.$$ test results returned optim parTests, respectively.","code":""},{"path":"https://markean.github.io/melt/reference/el_lm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical likelihood for linear models — el_lm","text":"Owen, Art. 1991. “Empirical Likelihood Linear Models.” Annals Statistics 19 (4): 1725–47. doi:10.1214/aos/1176348368 .","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/el_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical likelihood for linear models — el_lm","text":"","code":"df <- data.frame(y = rnorm(50), x = rnorm(50)) fit <- el_lm(y ~ x, df) summary(fit) #>  #> Call: #> el_lm(formula = y ~ x, data = df) #>  #> Coefficients: #>             Estimate Chisq Pr(>Chisq) #> (Intercept) -0.19998 2.617      0.106 #> x           -0.04474 0.117      0.732 #>  #> Chisq: 0.117, df: 1, Pr(>Chisq): 0.7323  #>  #> Constrained EL: converged  #>   fit2 <- el_lm(y ~ x, df, weights = rep(c(1, 2), each = 25)) summary(fit2) #>  #> Call: #> el_lm(formula = y ~ x, data = df, weights = rep(c(1, 2), each = 25)) #>  #> Coefficients: #>             Estimate Chisq Pr(>Chisq) #> (Intercept) -0.13967 1.234      0.267 #> x           -0.04513 0.115      0.735 #>  #> Chisq: 0.1147, df: 1, Pr(>Chisq): 0.7349  #>  #> Constrained EL: converged  #>   df[1, 2] <- NA fit3 <- el_lm(y ~ x, df, na.action = na.omit) summary(fit3) #>  #> Call: #> el_lm(formula = y ~ x, data = df, na.action = na.omit) #>  #> Coefficients: #>             Estimate Chisq Pr(>Chisq) #> (Intercept) -0.18079 2.097      0.148 #> x           -0.08449 0.381      0.537 #>  #>   (1 observation deleted due to missingness) #>  #> Chisq: 0.3807, df: 1, Pr(>Chisq): 0.5373  #>  #> Constrained EL: converged  #>"},{"path":"https://markean.github.io/melt/reference/el_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical likelihood for the mean — el_mean","title":"Empirical likelihood for the mean — el_mean","text":"Computes empirical likelihood mean.","code":""},{"path":"https://markean.github.io/melt/reference/el_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical likelihood for the mean — el_mean","text":"","code":"el_mean(x, par, weights = NULL, control = el_control(), model = TRUE)"},{"path":"https://markean.github.io/melt/reference/el_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical likelihood for the mean — el_mean","text":"x numeric matrix, object can coerced numeric matrix. row corresponds observation. number rows must greater number columns. par numeric vector parameter values tested. length vector must number columns x. weights optional numeric vector weights used fitting process. length vector must number rows x. Defaults NULL, corresponding identical weights. non-NULL, weighted empirical likelihood computed. control object class ControlEL constructed el_control(). model single logical. TRUE data matrix used model fitting returned.","code":""},{"path":"https://markean.github.io/melt/reference/el_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical likelihood for the mean — el_mean","text":"object class EL.","code":""},{"path":"https://markean.github.io/melt/reference/el_mean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical likelihood for the mean — el_mean","text":"Owen, Art. 1990. “Empirical Likelihood Ratio Confidence Regions.” Annals Statistics 18 (1): 90–120. doi:10.1214/aos/1176347494 .","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/el_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical likelihood for the mean — el_mean","text":"","code":"# scalar mean x <- rnorm(100) par <- 0 el_mean(x, par) #>  #> \tEmpirical Likelihood: mean  #>  #> Maximum EL estimates: #> [1] -0.02392 #>  #> Chisq: 0.05682, df: 1, Pr(>Chisq): 0.8116 #>  #> EL evaluation: converged  #>   # vector mean x <- matrix(rnorm(100), ncol = 2) par <- c(0, 0) el_mean(x, par) #>  #> \tEmpirical Likelihood: mean  #>  #> Maximum EL estimates: #> [1] -0.03298  0.04631 #>  #> Chisq: 0.1979, df: 2, Pr(>Chisq): 0.9058 #>  #> EL evaluation: converged  #>   # weighted data x <- matrix(rnorm(100), ncol = 2) par <- c(0, 0) w <- rep(c(1, 2), each = 25) el_mean(x, par, w) #>  #> \tEmpirical Likelihood: mean  #>  #> Maximum EL estimates: #> [1] -0.2254  0.1252 #>  #> Chisq: 2.872, df: 2, Pr(>Chisq): 0.2379 #>  #> EL evaluation: converged  #>"},{"path":"https://markean.github.io/melt/reference/eld.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical likelihood displacement — eld","title":"Empirical likelihood displacement — eld","text":"Computes empirical likelihood displacement model diagnostics outlier detection.","code":""},{"path":"https://markean.github.io/melt/reference/eld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical likelihood displacement — eld","text":"","code":"# S4 method for EL eld(object, control = el_control())  # S4 method for missing eld(object, control = el_control())"},{"path":"https://markean.github.io/melt/reference/eld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical likelihood displacement — eld","text":"object object inherit class EL, including CEL, LM, GLM. control object class ControlEL constructed el_control().","code":""},{"path":"https://markean.github.io/melt/reference/eld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical likelihood displacement — eld","text":"object class ELD.","code":""},{"path":"https://markean.github.io/melt/reference/eld.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical likelihood displacement — eld","text":"Let \\(L(\\theta)\\) empirical log-likelihood function based full sample \\(n\\) observations. maximum empirical likelihood estimate denoted \\(\\hat{\\theta}\\). Consider reduced sample \\(\\)th observation deleted corresponding estimate \\(\\hat{\\theta}_{()}\\). empirical likelihood displacement defined $$\\textnormal{ELD}_i = 2\\{L(\\hat{\\theta}) - L(\\hat{\\theta}_{()})\\}.$$ \\(\\textnormal{ELD}_i \\) large, \\(\\)th observation influential point can inspected possible outlier. eld computes \\(\\textnormal{ELD}_i \\) \\(= 1, \\dots, n \\).","code":""},{"path":"https://markean.github.io/melt/reference/eld.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical likelihood displacement — eld","text":"Lazar, Nicole . 2005. “Assessing Effect Individual Data Points Inference Empirical Likelihood.” Journal Computational Graphical Statistics 14 (3): 626–42. doi:10.1198/106186005X59568 . Zhu, H., J. G. Ibrahim, N. Tang, H. Zhang. 2008. “Diagnostic Measures Empirical Likelihood General Estimating Equations.” Biometrika 95 (2): 489–507. doi:10.1093/biomet/asm094 .","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/eld.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical likelihood displacement — eld","text":"","code":"x <- rnorm(10L) y <- 10 fit <- el_mean(c(x, y), 0) eld(fit) #> An object of class \"ELD\" #> Slot \"eld\": #>  [1]  0.133905014  0.148892435  0.056350778  0.513482597  0.204532346 #>  [6]  0.196692634  0.054923016  0.383982402  0.101573025  0.004540341 #> [11] 25.408923171 #>"},{"path":"https://markean.github.io/melt/reference/elmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical likelihood multiple tests — elmt","title":"Empirical likelihood multiple tests — elmt","text":"Tests multiple linear hypotheses objects inherit class EL.","code":""},{"path":"https://markean.github.io/melt/reference/elmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical likelihood multiple tests — elmt","text":"","code":"# S4 method for EL elmt(object, rhs = NULL, lhs = NULL, alpha = 0.05, control = el_control())"},{"path":"https://markean.github.io/melt/reference/elmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical likelihood multiple tests — elmt","text":"object object inherit class EL, including CEL, LM, GLM. rhs numeric vector (column matrix) list numeric vectors right-hand sides hypotheses. Defaults NULL. See ‘Details’. lhs numeric matrix list numeric matrices left-hand sides hypothesis. row matrices gives linear combination parameters object. number columns equal number parameters. Defaults NULL. See ‘Details’. alpha single numeric overall significance level. Defaults 0.05. control object class ControlEL constructed el_control().","code":""},{"path":"https://markean.github.io/melt/reference/elmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical likelihood multiple tests — elmt","text":"object class ELMT.","code":""},{"path":"https://markean.github.io/melt/reference/elmt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical likelihood multiple tests — elmt","text":"elmt() tests multiple hypotheses simultaneously. hypothesis corresponds constrained empirical likelihood ratio described CEL. rhs lhs NULL. right-hand side left-hand side hypothesis must specified described elt(). specifying linear contrasts conveniently, rhs lhs also take numeric vector numeric matrix, respectively. element rhs row lhs correspond contrast (hypothesis). vector empirical likelihood ratio statistics asymptotically follows multivariate chi-square distribution complete null hypothesis. multiple testing procedure asymptotically controls family-wise error rate level alpha. Based distribution maximum test statistics, adjusted p-values estimated Monte Carlo simulation.","code":""},{"path":"https://markean.github.io/melt/reference/elmt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical likelihood multiple tests — elmt","text":"Kim E, MacEachern S, Peruggia M (2021). “Empirical Likelihood Analysis Experimental Designs.” arxiv:2112.09206. URL https://arxiv.org/abs/2112.09206.","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/elmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical likelihood multiple tests — elmt","text":"","code":"## Example 1: bivariate mean (list `rhs` & no `lhs`) data(\"women\") fit <- el_mean(women, par = c(65, 135)) rhs <- list(c(64, 133), c(66, 140)) set.seed(143) elmt(fit, rhs = rhs) #>  #> \tEmpirical Likelihood Multiple Tests #>  #> Overall significance level: 0.05  #>  #> Calibration: Multivariate chi-square  #>  #> Hypotheses: #>     Chisq   p.adj #> 1 2.06885 0.35572 #> 2 1.25545 0.53424 #>  #> Common critical value: 5.9851  #>   ## Example 2: pairwise comparison (no `rhs` & matrix `lhs`) data(\"clothianidin\") fit2 <- el_lm(clo ~ -1 + trt, clothianidin) lhs <- matrix(c(   1, -1, 0, 0,   0, 1, -1, 0,   0, 0, 1, -1 ), byrow = TRUE, nrow = 3) set.seed(629) elmt(fit2, lhs = lhs) #>  #> \tEmpirical Likelihood Multiple Tests #>  #> Overall significance level: 0.05  #>  #> Calibration: Multivariate chi-square  #>  #> Hypotheses: #>     Chisq    p.adj   #> 1 5.51009 0.051591 . #> 2 1.06195 0.613918   #> 3 3.77405 0.135256   #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Common critical value: 5.5668  #>   ## Example 3: arbitrary hypotheses (list `rhs` & list `lhs`) data(\"mtcars\") fit <- el_lm(mpg ~ wt + qsec, data = mtcars) lhs <- list(rbind(c(1, 4, 0)), rbind(c(0, 1, 0), c(0, 0, 1))) rhs <- list(0, c(-6, 1)) elmt(fit, rhs = rhs, lhs = lhs) #>  #> \tEmpirical Likelihood Multiple Tests #>  #> Overall significance level: 0.05  #>  #> Calibration: Multivariate chi-square  #>  #> Hypotheses: #>     Chisq   p.adj #> 1 0.03725 0.98429 #> 2 2.78965 0.25025 #>  #> Common critical value: 6.0098  #>"},{"path":"https://markean.github.io/melt/reference/elt.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical likelihood test — elt","title":"Empirical likelihood test — elt","text":"Tests linear hypothesis objects inherit class EL.","code":""},{"path":"https://markean.github.io/melt/reference/elt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical likelihood test — elt","text":"","code":"# S4 method for EL elt(   object,   rhs = NULL,   lhs = NULL,   alpha = 0.05,   calibrate = c(\"chisq\", \"boot\", \"f\"),   control = el_control() )  # S4 method for missing elt(   object,   rhs = NULL,   lhs = NULL,   alpha = 0.05,   calibrate = c(\"chisq\", \"boot\", \"f\"),   control = el_control() )"},{"path":"https://markean.github.io/melt/reference/elt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical likelihood test — elt","text":"object object inherit class EL, including CEL, LM, GLM. rhs numeric vector column matrix right-hand side hypothesis, many entries rows lhs. Defaults NULL. See ‘Details’. lhs numeric matrix vector (treated row matrix) left-hand side hypothesis. row gives linear combination parameters object. number columns equal number parameters. Defaults NULL. See ‘Details’. alpha single numeric significance level. Defaults 0.05. calibrate single character calibration method. Defaults \"chisq\". See ‘Details’. control object class ControlEL constructed el_control().","code":""},{"path":"https://markean.github.io/melt/reference/elt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical likelihood test — elt","text":"object class ELT. lhs non-NULL, optim slot corresponds CEL. Otherwise, corresponds EL.","code":""},{"path":"https://markean.github.io/melt/reference/elt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Empirical likelihood test — elt","text":"elt() performs constrained minimization \\(l(\\theta)\\) described CEL. rhs lhs NULL. non-NULL lhs, required lhs full row rank \\(q \\leq p\\) \\(p\\) equal number parameters object. Depending specification rhs lhs, following three cases: rhs lhs non-NULL, constrained minimization performed right-hand side \\(r\\) left-hand side \\(L\\) $$\\inf_{\\theta: L\\theta = r} l(\\theta).$$ rhs NULL, \\(r\\) set zero vector \\(\\inf_{\\theta: L\\theta = 0} l(\\theta)\\). lhs NULL, \\(L\\) set identity matrix problem reduces evaluating \\(r\\) \\(l(r)\\). calibrate specifies calibration method used. Three methods available: \"chisq\" (chi-square calibration), \"boot\" (bootstrap calibration), \"f\" (\\(F\\) calibration). \"boot\" applicable lhs NULL. nthreads, seed, B slots control apply bootstrap procedure. \"f\" applicable mean parameter lhs NULL.","code":""},{"path":"https://markean.github.io/melt/reference/elt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical likelihood test — elt","text":"Adimari, Gianfranco, Annamaria Guolo. 2010. “Note Asymptotic Behaviour Empirical Likelihood Statistics.” Statistical Methods & Applications 19 (4): 463–76. doi:10.1007/s10260-010-0137-9 . Qin, Jing, Jerry Lawless. 1995. “Estimating Equations, Empirical Likelihood Constraints Parameters.” Canadian Journal Statistics 23 (2): 145–59. doi:10.2307/3315441 .","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/elt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical likelihood test — elt","text":"","code":"n <- 100 x1 <- rnorm(n) x2 <- rnorm(n) y <- 1 + x1 + x2 + rnorm(n) df <- data.frame(y, x1, x2) fit <- el_lm(y ~ x1 + x2, df) elt(fit, lhs = c(0, 1.5, -1), rhs = 2.5) #>  #> \tEmpirical Likelihood Test #>  #> Significance level: 0.05, Calibration: Chi-square  #>  #> Statistic: 83.78118, Critical value: 3.841459  #>  #> p-value: < 2.2204e-16  #>   # test of no treatment effect data(\"clothianidin\") lhs <- matrix(c(   1, -1, 0, 0,   0, 1, -1, 0,   0, 0, 1, -1 ), byrow = TRUE, nrow = 3) fit2 <- el_lm(clo ~ -1 + trt, clothianidin) elt(fit2, lhs = lhs) #>  #> \tEmpirical Likelihood Test #>  #> Significance level: 0.05, Calibration: Chi-square  #>  #> Statistic: 26.59804, Critical value: 7.814728  #>  #> p-value: 7.147731e-06  #>"},{"path":"https://markean.github.io/melt/reference/logLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical log-likelihood — logLik","title":"Empirical log-likelihood — logLik","text":"Extracts empirical log-likelihood model evaluated estimated coefficients.","code":""},{"path":"https://markean.github.io/melt/reference/logLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical log-likelihood — logLik","text":"","code":"# S4 method for EL logLik(object, ...)"},{"path":"https://markean.github.io/melt/reference/logLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical log-likelihood — logLik","text":"object object inherit class EL, including CEL, LM, GLM. ... used.","code":""},{"path":"https://markean.github.io/melt/reference/logLik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical log-likelihood — logLik","text":"object class logLikEL.","code":""},{"path":"https://markean.github.io/melt/reference/logLik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical log-likelihood — logLik","text":"","code":"fit <- el_lm(mpg ~ wt, data = mtcars) logLik(fit) #> 'Empirical log Lik.' -110.9035 (df=2)"},{"path":"https://markean.github.io/melt/reference/logLikEL-class.html","id":null,"dir":"Reference","previous_headings":"","what":"logLikEL class — logLikEL-class","title":"logLikEL class — logLikEL-class","text":"S4 class empirical log-likelihood.","code":""},{"path":"https://markean.github.io/melt/reference/logLikEL-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logLikEL class — logLikEL-class","text":"","code":"# S4 method for logLikEL print(x, digits = getOption(\"digits\"), ...)"},{"path":"https://markean.github.io/melt/reference/logLikEL-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"logLikEL class — logLikEL-class","text":"x object class logLikEL. digits single integer number significant digits passed format(). ... arguments passed methods.","code":""},{"path":"https://markean.github.io/melt/reference/logLikEL-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"logLikEL class — logLikEL-class","text":"logLik single numeric empirical log-likelihood. df single integer degrees freedom number (estimated) parameters model.","code":""},{"path":"https://markean.github.io/melt/reference/logLikEL-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logLikEL class — logLikEL-class","text":"","code":"showClass(\"logLikEL\") #> Class \"logLikEL\" [package \"melt\"] #>  #> Slots: #>                        #> Name:   logLik      df #> Class: numeric integer"},{"path":"https://markean.github.io/melt/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot methods — plot","title":"Plot methods — plot","text":"Provides plot methods objects inherit class EL.","code":""},{"path":"https://markean.github.io/melt/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot methods — plot","text":"","code":"# S4 method for ConfregEL plot(x, y, ...)  # S4 method for ELD plot(x, y, ...)"},{"path":"https://markean.github.io/melt/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot methods — plot","text":"x object plotted. y used. ... graphical parameters (see par).","code":""},{"path":"https://markean.github.io/melt/reference/plot.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot methods — plot","text":"ConfregEL: Plots two-dimensional confidence region model parameters. ELD: Plots empirical likelihood displacement values versus observation index.","code":""},{"path":[]},{"path":"https://markean.github.io/melt/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot methods — plot","text":"","code":"# model fit <- el_lm(hp ~ wt, data = mtcars)  # confidence region out1 <- confreg(fit, npoints = 500) plot(out1)   # empirical likelihood displacement out2 <- eld(fit) plot(out2)"},{"path":"https://markean.github.io/melt/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary methods — summary","title":"Summary methods — summary","text":"Provides summary methods objects inherit class EL.","code":""},{"path":"https://markean.github.io/melt/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary methods — summary","text":"","code":"# S4 method for LM summary(object, ...)"},{"path":"https://markean.github.io/melt/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary methods — summary","text":"object object summary desired. ... Additional arguments affecting summary produced.","code":""},{"path":"https://markean.github.io/melt/reference/summary.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Summary methods — summary","text":"LM: Summarizes results overall test tests parameter.","code":""},{"path":"https://markean.github.io/melt/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary methods — summary","text":"","code":"fit <- el_lm(mpg ~ wt, data = mtcars) summary(fit) #>  #> Call: #> el_lm(formula = mpg ~ wt, data = mtcars) #>  #> Coefficients: #>             Estimate Chisq Pr(>Chisq)     #> (Intercept)   37.285 443.3     <2e-16 *** #> wt            -5.344 439.1     <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Chisq: 439.1, df: 1, Pr(>Chisq): < 2.2e-16  #>  #> Constrained EL: not converged  #>"},{"path":"https://markean.github.io/melt/reference/weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Model weights — weights","title":"Model weights — weights","text":"Extracts model weights objects inherit class EL. weights rescaled total number observations fitting procedure.","code":""},{"path":"https://markean.github.io/melt/reference/weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model weights — weights","text":"","code":"# S4 method for EL weights(object, ...)"},{"path":"https://markean.github.io/melt/reference/weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model weights — weights","text":"object object inherit class EL, including CEL, LM, GLM. ... used.","code":""},{"path":"https://markean.github.io/melt/reference/weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model weights — weights","text":"numeric vector rescaled weights.","code":""},{"path":"https://markean.github.io/melt/reference/weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model weights — weights","text":"","code":"data(\"airquality\") x <- airquality$Wind w <- airquality$Day fit <- el_mean(x, par = 10, weights = w) weights(fit) #>   [1] 0.06327543 0.12655087 0.18982630 0.25310174 0.31637717 0.37965261 #>   [7] 0.44292804 0.50620347 0.56947891 0.63275434 0.69602978 0.75930521 #>  [13] 0.82258065 0.88585608 0.94913151 1.01240695 1.07568238 1.13895782 #>  [19] 1.20223325 1.26550868 1.32878412 1.39205955 1.45533499 1.51861042 #>  [25] 1.58188586 1.64516129 1.70843672 1.77171216 1.83498759 1.89826303 #>  [31] 1.96153846 0.06327543 0.12655087 0.18982630 0.25310174 0.31637717 #>  [37] 0.37965261 0.44292804 0.50620347 0.56947891 0.63275434 0.69602978 #>  [43] 0.75930521 0.82258065 0.88585608 0.94913151 1.01240695 1.07568238 #>  [49] 1.13895782 1.20223325 1.26550868 1.32878412 1.39205955 1.45533499 #>  [55] 1.51861042 1.58188586 1.64516129 1.70843672 1.77171216 1.83498759 #>  [61] 1.89826303 0.06327543 0.12655087 0.18982630 0.25310174 0.31637717 #>  [67] 0.37965261 0.44292804 0.50620347 0.56947891 0.63275434 0.69602978 #>  [73] 0.75930521 0.82258065 0.88585608 0.94913151 1.01240695 1.07568238 #>  [79] 1.13895782 1.20223325 1.26550868 1.32878412 1.39205955 1.45533499 #>  [85] 1.51861042 1.58188586 1.64516129 1.70843672 1.77171216 1.83498759 #>  [91] 1.89826303 1.96153846 0.06327543 0.12655087 0.18982630 0.25310174 #>  [97] 0.31637717 0.37965261 0.44292804 0.50620347 0.56947891 0.63275434 #> [103] 0.69602978 0.75930521 0.82258065 0.88585608 0.94913151 1.01240695 #> [109] 1.07568238 1.13895782 1.20223325 1.26550868 1.32878412 1.39205955 #> [115] 1.45533499 1.51861042 1.58188586 1.64516129 1.70843672 1.77171216 #> [121] 1.83498759 1.89826303 1.96153846 0.06327543 0.12655087 0.18982630 #> [127] 0.25310174 0.31637717 0.37965261 0.44292804 0.50620347 0.56947891 #> [133] 0.63275434 0.69602978 0.75930521 0.82258065 0.88585608 0.94913151 #> [139] 1.01240695 1.07568238 1.13895782 1.20223325 1.26550868 1.32878412 #> [145] 1.39205955 1.45533499 1.51861042 1.58188586 1.64516129 1.70843672 #> [151] 1.77171216 1.83498759 1.89826303"},{"path":[]},{"path":"https://markean.github.io/melt/news/index.html","id":"breaking-changes-1-5-2-9000","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"melt 1.5.2.9000 (development version)","text":"el_mean() takes arguments different order comply ‘tidyverse’ style. takes data argument x first, followed parameter specification par el_mean(x, par). lht() renamed elt().","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"new-features-1-5-2-9000","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"melt 1.5.2.9000 (development version)","text":"New package dependencies added (BH, dqrng, graphics). New elt() replaces lht(). accepts additional arguments alpha calibrate. New elmt() tests multiple hypotheses empirical likelihood. New weights() extracts rescaled weights.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"minor-improvements-1-5-2-9000","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"melt 1.5.2.9000 (development version)","text":"cv argument confint() confreg() defaults NULL. non-NULL, level ignored. probit link produces accurate result el_glm()","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"bug-fixes-1-5-2-9000","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"melt 1.5.2.9000 (development version)","text":"confint() confreg() check cv argument compatible th value set control_el().","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"deprecated-and-defunct-1-5-2-9000","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"melt 1.5.2.9000 (development version)","text":"el_pairwise() lht() removed along dependency RcppProgress package.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-152","dir":"Changelog","previous_headings":"","what":"melt 1.5.2","title":"melt 1.5.2","text":"CRAN release: 2022-06-15","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"new-features-1-5-2","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"melt 1.5.2","text":"lht() accepts numeric vector matrix lhs rhs arguments. OpenMP parallelization available confint() specifying nthreads control argument.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"deprecated-and-defunct-1-5-2","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"melt 1.5.2","text":"el_test() removed. el_pairwise() deprecated removed future release.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-151","dir":"Changelog","previous_headings":"","what":"melt 1.5.1","title":"melt 1.5.1","text":"CRAN release: 2022-05-06","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"bug-fixes-1-5-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"melt 1.5.1","text":"Unit test errors fixed.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-150","dir":"Changelog","previous_headings":"","what":"melt 1.5.0","title":"melt 1.5.0","text":"CRAN release: 2022-05-03","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"new-features-1-5-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"melt 1.5.0","text":"S4 classes, generics, methods adopted throughout package. New confreg() constructs confidence regions. New eld() computes empirical likelihood displacement values. New el_control() specifies control argument. New el_glm() performs empirical likelihood tests generalized linear models. families link functions supported future release. confint() gains cv argument user-supplied critical value.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"deprecated-and-defunct-1-5-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"melt 1.5.0","text":"el_aov() removed. el_test() deprecated removed future release.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-140","dir":"Changelog","previous_headings":"","what":"melt 1.4.0","title":"melt 1.4.0","text":"CRAN release: 2022-04-03","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"new-features-1-4-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"melt 1.4.0","text":"New lht() performs linear hypothesis testing. New confint() constructs confidence intervals. New logLik() extracts empirical log-likelihood.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"deprecated-and-defunct-1-4-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"melt 1.4.0","text":"el_aov() deprecated favor el_lm(). removed future release.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-130","dir":"Changelog","previous_headings":"","what":"melt 1.3.0","title":"melt 1.3.0","text":"CRAN release: 2022-03-07","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"new-features-1-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"melt 1.3.0","text":"el_eval() added direct computation custom estimating functions. el_mean() el_lm() accepts optional weights argument weighted EL. Arguments optimization now handled new control argument. used functions future releases.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-120","dir":"Changelog","previous_headings":"","what":"melt 1.2.0","title":"melt 1.2.0","text":"CRAN release: 2022-01-30","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"new-features-1-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"melt 1.2.0","text":"New el_lm() performs empirical likelihood tests linear models.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-110","dir":"Changelog","previous_headings":"","what":"melt 1.1.0","title":"melt 1.1.0","text":"CRAN release: 2021-12-22","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"melt 1.1.0","text":"New el_aov() performs one-way analysis variance.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-101","dir":"Changelog","previous_headings":"","what":"melt 1.0.1","title":"melt 1.0.1","text":"CRAN release: 2021-10-08","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"melt 1.0.1","text":"Header file issues related OpenMP C++ array class fixed.","code":""},{"path":"https://markean.github.io/melt/news/index.html","id":"melt-100","dir":"Changelog","previous_headings":"","what":"melt 1.0.0","title":"melt 1.0.0","text":"CRAN release: 2021-09-29 Released CRAN.","code":""}]
